package main

import (
	"html/template"
	"net/http"
	"os"
	"path/filepath"
	"strings"
	"time"

	"github.com/gin-gonic/gin"
	"github.com/golang-jwt/jwt/v5"
)

var jwtKey = []byte("supersecret_access_key")
var jwtRefreshKey = []byte("supersecret_refresh_key")

type Claims struct {
	Username string `json:"username"`
	Role     string `json:"role"`
	jwt.RegisteredClaims
}

// Example permissions per role
var rolePermissions = map[string][]string{
	"admin": {"create_orders", "view_orders", "update_orders", "delete_orders",
		"create_users", "view_users", "update_users", "delete_users",
		"create_collections", "view_collections", "update_collections", "delete_collections",
		"create_roles", "view_roles", "update_roles", "delete_roles",
		"create_reports"},
	"user": {"create_order", "view_order", "update_order", "delete_order",
		"create_reports"},
	"auditor": {"view_order", "create_reports"},
}

// Generate JWT token helper
func generateToken(username, role string, expiresIn time.Duration) (string, error) {
	claims := &Claims{
		Username: username,
		Role:     role,
		RegisteredClaims: jwt.RegisteredClaims{
			ExpiresAt: jwt.NewNumericDate(time.Now().Add(expiresIn)),
		},
	}

	token := jwt.NewWithClaims(jwt.SigningMethodHS256, claims)
	return token.SignedString(jwtKey)
}

func DummyAuthMiddleware() gin.HandlerFunc {
	return func(c *gin.Context) {
		authHeader := c.GetHeader("Authorization")
		if authHeader == "" || !strings.HasPrefix(authHeader, "Bearer ") {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "Unauthorized, token missing"})
			c.Abort()
			return
		}
		// optionally: just let it pass without real token check
		c.Next()
	}
}

func loadTemplates(pattern string) *template.Template {
	tmpl := template.New("")

	_ = filepath.Walk(pattern, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}

		if !info.IsDir() && filepath.Ext(path) == ".html" {
			_, err = tmpl.ParseFiles(path)
			if err != nil {
				panic(err)
			}
		}
		return nil
	})

	return tmpl
}

func main() {
	r := gin.Default()
	api := r.Group("/api/v1")
	// api.Use(DummyAuthMiddleware())

	// Load all templates from templates/ recursively
	tmpl := loadTemplates("templates")
	r.SetHTMLTemplate(tmpl)

	// Serve static files
	r.Static("/assets", "./assets")

	// Routes
	r.GET("/login", func(c *gin.Context) {
		c.HTML(http.StatusOK, "login.html", nil)
	})

	r.GET("/admin", func(c *gin.Context) {
		c.HTML(http.StatusOK, "admin-main.html", nil)
	})

	r.GET("/user", func(c *gin.Context) {
		c.HTML(http.StatusOK, "user-main.html", nil)
	})

	r.GET("/executor", func(c *gin.Context) {
		c.HTML(http.StatusOK, "executor-main.html", nil)
	})

	r.GET("/auditor", func(c *gin.Context) {
		c.HTML(http.StatusOK, "auditor-main.html", nil)
	})

	r.POST("api/v1/auth/login", func(c *gin.Context) {
		var creds struct {
			Login      string `json:"login"`
			Password   string `json:"password"`
			RememberMe bool   `json:"rememberMe"`
		}

		if err := c.BindJSON(&creds); err != nil {
			c.JSON(http.StatusBadRequest, gin.H{"error": "Bad request"})
			return
		}

		if creds.Login == "" || creds.Password == "" {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "Missing credentials"})
			return
		}

		// Dummy role detection
		var role string
		switch {
		case strings.HasPrefix(creds.Login, "admin"):
			role = "admin"
		case strings.HasPrefix(creds.Login, "user"):
			role = "user"
		case strings.HasPrefix(creds.Login, "auditor"):
			role = "auditor"
		default:
			c.JSON(http.StatusUnauthorized, gin.H{"error": "Invalid login"})
			return
		}

		// Get permissions
		perms, ok := rolePermissions[role]
		if !ok {
			perms = []string{}
		}

		// Create Access Token (15 min)
		accessClaims := &Claims{
			Username: creds.Login,
			Role:     role,
			RegisteredClaims: jwt.RegisteredClaims{
				ExpiresAt: jwt.NewNumericDate(time.Now().Add(15 * time.Minute)),
			},
		}
		accessToken := jwt.NewWithClaims(jwt.SigningMethodHS256, accessClaims)
		accessString, err := accessToken.SignedString(jwtKey)
		if err != nil {
			c.JSON(http.StatusInternalServerError, gin.H{"error": "Could not create access token"})
			return
		}

		// üß† Here: decide refresh expiry based on rememberMe
		refreshDuration := 7 * 24 * time.Hour
		if !creds.RememberMe {
			refreshDuration = 15 * time.Minute
		}

		refreshClaims := &Claims{
			Username: creds.Login,
			Role:     role,
			RegisteredClaims: jwt.RegisteredClaims{
				ExpiresAt: jwt.NewNumericDate(time.Now().Add(refreshDuration)),
			},
		}
		refreshToken := jwt.NewWithClaims(jwt.SigningMethodHS256, refreshClaims)
		refreshString, err := refreshToken.SignedString(jwtRefreshKey)
		if err != nil {
			c.JSON(http.StatusInternalServerError, gin.H{"error": "Could not create refresh token"})
			return
		}

		// üç™ set cookie with correct MaxAge
		c.SetCookie(
			"refresh_token",
			refreshString,
			int(refreshDuration.Seconds()),
			"/",
			"",
			true, // Secure
			true, // HttpOnly
		)

		// üéÅ send response
		c.JSON(http.StatusOK, gin.H{
			"access_token": accessString,
			"role":         role,
			"permissions":  perms,
		})
	})

	r.POST("api/v1/auth/refresh", func(c *gin.Context) {
		rtCookie, err := c.Cookie("refresh_token")
		if err != nil {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "No refresh token"})
			return
		}

		// Parse refresh token
		token, err := jwt.ParseWithClaims(rtCookie, &Claims{}, func(token *jwt.Token) (interface{}, error) {
			return jwtRefreshKey, nil
		})
		if err != nil || !token.Valid {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "Invalid refresh token"})
			return
		}

		claims, ok := token.Claims.(*Claims)
		if !ok {
			c.JSON(http.StatusUnauthorized, gin.H{"error": "Invalid claims"})
			return
		}

		// Generate new access token
		newAccessToken, err := generateToken(claims.Username, claims.Role, 15*time.Minute)
		if err != nil {
			c.JSON(http.StatusInternalServerError, gin.H{"error": "Failed to create access token"})
			return
		}

		c.JSON(http.StatusOK, gin.H{
			"access_token": newAccessToken,
			"role":         claims.Role,
		})
	})

	// api/main/
	api.GET("/main", func(c *gin.Context) {
		data := []gin.H{
			{"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": "–û—Ç–¥–µ–ª IT", "–û—Ç–∫—Ä—ã—Ç–æ": 5, "–ó–∞–∫—Ä—ã—Ç–æ": 2},
			{"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": "–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤", "–û—Ç–∫—Ä—ã—Ç–æ": 3, "–ó–∞–∫—Ä—ã—Ç–æ": 1},
			{"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª", "–û—Ç–∫—Ä—ã—Ç–æ": 7, "–ó–∞–∫—Ä—ã—Ç–æ": 4},
			{"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª", "–û—Ç–∫—Ä—ã—Ç–æ": 2, "–ó–∞–∫—Ä—ã—Ç–æ": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/order", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1023, "name": "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É", "department_id": 1, "otdel_id": 1, "priority_id": 3, "status_id": 1, "branch_id": 1, "office_id": 1, "equipment_id": 1, "user_id": 1, "duration": "2024-06-01T09:15:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "created_at": "2024-06-01T08:00:00Z"},
			{"id": 2045, "name": "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–Ω—Ç–µ—Ä", "department_id": 2, "otdel_id": 2, "priority_id": 1, "status_id": 3, "branch_id": 2, "office_id": 2, "equipment_id": 2, "user_id": 2, "duration": "2024-06-02T10:30:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "created_at": "2024-06-02T09:00:00Z"},
			{"id": 3098, "name": "–ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç—É–ø", "department_id": 3, "otdel_id": 3, "priority_id": 4, "status_id": 2, "branch_id": 3, "office_id": 3, "equipment_id": 3, "user_id": 3, "duration": "2024-06-03T14:45:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "created_at": "2024-06-03T13:00:00Z"},
			{"id": 4120, "name": "–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è", "department_id": 4, "otdel_id": 4, "priority_id": 2, "status_id": 4, "branch_id": 4, "office_id": 4, "equipment_id": 4, "user_id": 4, "duration": "2024-06-04T08:20:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "created_at": "2024-06-04T07:00:00Z"},
			{"id": 5234, "name": "–ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º", "department_id": 1, "otdel_id": 1, "priority_id": 1, "status_id": 1, "branch_id": 1, "office_id": 1, "equipment_id": 4, "user_id": 5, "duration": "2024-06-05T13:10:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "created_at": "2024-06-05T12:00:00Z"},
			{"id": 6345, "name": "–û—à–∏–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è", "department_id": 3, "otdel_id": 3, "priority_id": 3, "status_id": 2, "branch_id": 3, "office_id": 3, "equipment_id": 3, "user_id": 6, "duration": "2024-06-06T15:25:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "created_at": "2024-06-06T14:00:00Z"},
			{"id": 7456, "name": "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–∞", "department_id": 2, "otdel_id": 2, "priority_id": 2, "status_id": 3, "branch_id": 2, "office_id": 2, "equipment_id": 2, "user_id": 2, "duration": "2024-06-07T11:40:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "created_at": "2024-06-07T10:00:00Z"},
			{"id": 8567, "name": "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ—á—Ç–µ", "department_id": 1, "otdel_id": 1, "priority_id": 3, "status_id": 3, "branch_id": 1, "office_id": 1, "equipment_id": 2, "user_id": 1, "duration": "2024-06-08T09:55:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "created_at": "2024-06-08T08:30:00Z"},
			{"id": 9678, "name": "–°–±–æ–π —Å–µ—Ä–≤–µ—Ä–∞", "department_id": 3, "otdel_id": 3, "priority_id": 4, "status_id": 3, "branch_id": 3, "office_id": 3, "equipment_id": 1, "user_id": 3, "duration": "2024-06-09T17:05:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "created_at": "2024-06-09T16:00:00Z"},
			{"id": 10789, "name": "–ó–∞–º–µ–Ω–∞ –º—ã—à–∏", "department_id": 2, "otdel_id": 2, "priority_id": 1, "status_id": 3, "branch_id": 2, "office_id": 2, "equipment_id": 2, "user_id": 2, "duration": "2024-06-10T08:10:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "created_at": "2024-06-10T07:00:00Z"},
			{"id": 11890, "name": "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞", "department_id": 1, "otdel_id": 1, "priority_id": 2, "status_id": 3, "branch_id": 1, "office_id": 1, "equipment_id": 3, "user_id": 1, "duration": "2024-06-11T13:50:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "created_at": "2024-06-11T12:30:00Z"},
			{"id": 12901, "name": "–ü—Ä–æ–±–ª–µ–º–∞ —Å VPN", "department_id": 3, "otdel_id": 3, "priority_id": 3, "status_id": 3, "branch_id": 3, "office_id": 3, "equipment_id": 4, "user_id": 3, "duration": "2024-06-12T16:40:00Z", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "created_at": "2024-06-12T15:00:00Z"},
		}
		pagination := map[string]interface{}{
			"currentPage": 1,
			"pageSize":    10,
			"totalPages":  2,
			"totalItems":  12,
			"hasNextPage": true,
			"hasPrevPage": true,
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
			"pagination":  pagination,
		})
	})

	api.GET("/user", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "fio": "–†–∞—Ö–∏–º–æ–≤ –ê–ª–∏—à–µ—Ä –°–∞–∏–¥–æ–≤–∏—á", "email": "alisher.rahimov@arvand.tj", "phoneNumber": "+992901234567", "role_id": 2, "branch_id": 1, "department_id": 1, "office_id": 1, "otdel_id": 1, "position": "–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ IT"},
			{"id": 2, "fio": "–°–∞–∏–¥–æ–≤ –§–∞—Ä—Ä—É—Ö –ú–∞—Ö–º–∞–¥–æ–≤–∏—á", "email": "farrukh.saidov@arvand.tj", "phoneNumber": "+992902345678", "role_id": 3, "branch_id": 2, "department_id": 2, "office_id": 2, "otdel_id": 2, "position": "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∞–¥—Ä–∞–º"},
			{"id": 3, "fio": "–ö–∞—Ä–∏–º–æ–≤–∞ –ú–µ—Ö—Ä—É–±–æ–Ω –®–∞—Ä–∏–ø–æ–≤–Ω–∞", "email": "mehrubon.karimova@arvand.tj", "phoneNumber": "+992933456789", "role_id": 5, "branch_id": 3, "department_id": 3, "office_id": 3, "otdel_id": 3, "position": "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∑–∞—è–≤–æ–∫"},
			{"id": 4, "fio": "–ù–∞–∑–∞—Ä–æ–≤–∞ –®–∞—Ö–Ω–æ–∑–∞ –†—É—Å—Ç–∞–º–æ–≤–Ω–∞", "email": "shahnoza.nazarova@arvand.tj", "phoneNumber": "+992944567890", "role_id": 4, "branch_id": 4, "department_id": 4, "office_id": 4, "otdel_id": 4, "position": "–ê—É–¥–∏—Ç–æ—Ä"},
			{"id": 5, "fio": "–ò—Å–º–æ–∏–ª–æ–≤–∞ –ú–∞–ª–∏–∫–∞ –î–∞–≤–ª–∞—Ç–æ–≤–Ω–∞", "email": "malika.ismoilova@arvand.tj", "phoneNumber": "+992955678901", "role_id": 1, "branch_id": 1, "department_id": 1, "office_id": 1, "otdel_id": 1, "position": "–°—É–ø–µ—Ä –∞–¥–º–∏–Ω"},
			{"id": 6, "fio": "–ú–∏—Ä–∑–æ–µ–≤ –î–∞–ª–µ—Ä –§–∏—Ä—É–∑–æ–≤–∏—á", "email": "daler.mirzoev@arvand.tj", "phoneNumber": "+992966789012", "role_id": 5, "branch_id": 3, "department_id": 3, "office_id": 3, "otdel_id": 3, "position": "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∑–∞—è–≤–æ–∫"},
		}
		pagination := map[string]interface{}{
			"currentPage": 1,
			"pageSize":    10,
			"totalPages":  1,
			"totalItems":  6,
			"hasNextPage": false,
			"hasPrevPage": false,
		}

		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
			"pagination":  pagination,
		})
	})

	api.DELETE("/user/1", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{
			"status_code": 200,
		})
	})

	api.GET("/status", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "icon": "icon1", "name": "–û—Ç–∫—Ä—ã—Ç–æ", "type": 1},
			{"id": 2, "icon": "icon2", "name": "–í —Ä–∞–±–æ—Ç–µ", "type": 1},
			{"id": 3, "icon": "icon3", "name": "–ó–∞–∫—Ä—ã—Ç–æ", "type": 2},
			{"id": 4, "icon": "icon4", "name": "–û—Ç–º–µ–Ω–µ–Ω–æ", "type": 2},
			{"id": 5, "icon": "icon5", "name": "–í –æ–∂–∏–¥–∞–Ω–∏–∏", "type": 3},
			{"id": 6, "icon": "icon6", "name": "–û–¥–æ–±—Ä–µ–Ω–æ", "type": 2},
			{"id": 7, "icon": "icon7", "name": "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ", "type": 2},
			{"id": 8, "icon": "icon8", "name": "–ù–∞ —É–¥–µ—Ä–∂–∞–Ω–∏–∏", "type": 3},
			{"id": 9, "icon": "icon9", "name": "–≠—Å–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–æ", "type": 4},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/priority", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "icon": "icon-low", "name": "–ù–∏–∑–∫–∏–π", "rate": 1},
			{"id": 2, "icon": "icon-medium", "name": "–°—Ä–µ–¥–Ω–∏–π", "rate": 2},
			{"id": 3, "icon": "icon-high", "name": "–í—ã—Å–æ–∫–∏–π", "rate": 3},
			{"id": 4, "icon": "icon-critical", "name": "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", "rate": 4},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/department", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π", "status_id": 0},
			{"id": 2, "name": "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –∫–∞–¥—Ä–æ–≤", "status_id": 1},
			{"id": 3, "name": "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤", "status_id": 1},
			{"id": 4, "name": "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —É—Å–ª—É–≥", "status_id": 1},
			{"id": 5, "name": "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤", "status_id": 1},
			{"id": 6, "name": "–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/otdel", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "–û—Ç–¥–µ–ª IT", "status_id": 1, "department_id": 1},
			{"id": 2, "name": "–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤", "status_id": 1, "department_id": 2},
			{"id": 3, "name": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª", "status_id": 1, "department_id": 3},
			{"id": 4, "name": "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª", "status_id": 1, "department_id": 4},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/branch", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "–§–∏–ª–∏–∞–ª–∏ –º–∞—Ä–∫–∞–∑”£", "shortName": "–ú–∞—Ä–∫–∞–∑”£", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "phoneNumber": "+992 44 600 0001", "email": "central@arvand.tj", "email_index": "734003", "openDate": "2010-01-15", "status_id": 1},
			{"id": 2, "name": "–§–∏–ª–∏–∞–ª–∏ –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£", "shortName": "–ò. –°–æ–º–æ–Ω”£", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "phoneNumber": "+992 44 600 0002", "email": "somoni@arvand.tj", "email_index": "734012", "openDate": "2012-03-10", "status_id": 1},
			{"id": 3, "name": "–§–∏–ª–∏–∞–ª–∏ –§–∏—Ä–¥–∞–≤—Å”£", "shortName": "–§–∏—Ä–¥–∞–≤—Å”£", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "phoneNumber": "+992 44 600 0003", "email": "firdavsi@arvand.tj", "email_index": "734025", "openDate": "2013-06-25", "status_id": 1},
			{"id": 4, "name": "–§–∏–ª–∏–∞–ª–∏ –°–∏–Ω–æ", "shortName": "–°–∏–Ω–æ", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "phoneNumber": "+992 44 600 0004", "email": "sino@arvand.tj", "email_index": "734019", "openDate": "2014-09-05", "status_id": 1},
			{"id": 5, "name": "–§–∏–ª–∏–∞–ª–∏ –®–æ“≥–º–∞–Ω—Å—É—Ä", "shortName": "–®–æ“≥–º–∞–Ω—Å—É—Ä", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –®–æ“≥–º–∞–Ω—Å—É—Ä 12", "phoneNumber": "+992 44 600 0005", "email": "shohmansur@arvand.tj", "email_index": "734024", "openDate": "2015-11-20", "status_id": 1},
			{"id": 6, "name": "–§–∏–ª–∏–∞–ª–∏ –í–∞—Ö–¥–∞—Ç", "shortName": "–í–∞—Ö–¥–∞—Ç", "address": "—à. –í–∞—Ö–¥–∞—Ç, –∫”Ø—á. –ò—Å—Ç–∏“õ–ª–æ–ª 34", "phoneNumber": "+992 44 600 0006", "email": "vahdat@arvand.tj", "email_index": "735500", "openDate": "2016-02-14", "status_id": 1},
			{"id": 7, "name": "–§–∏–ª–∏–∞–ª–∏ “≤–∏—Å–æ—Ä", "shortName": "“≤–∏—Å–æ—Ä", "address": "—à. “≤–∏—Å–æ—Ä, –∫”Ø—á. –ù–∞–≤—Ä”Ø–∑ 56", "phoneNumber": "+992 44 600 0007", "email": "hisor@arvand.tj", "email_index": "735140", "openDate": "2017-04-18", "status_id": 1},
			{"id": 8, "name": "–§–∏–ª–∏–∞–ª–∏ –¢—É—Ä—Å—É–Ω–∑–æ–¥–∞", "shortName": "–¢—É—Ä—Å—É–Ω–∑–æ–¥–∞", "address": "—à. –¢—É—Ä—Å—É–Ω–∑–æ–¥–∞, –∫”Ø—á. –î”Ø—Å—Ç”£ 78", "phoneNumber": "+992 44 600 0008", "email": "tursunzoda@arvand.tj", "email_index": "735400", "openDate": "2018-07-22", "status_id": 1},
			{"id": 9, "name": "–§–∏–ª–∏–∞–ª–∏ –ë–æ—Ö—Ç–∞—Ä", "shortName": "–ë–æ—Ö—Ç–∞—Ä", "address": "—à. –ë–æ—Ö—Ç–∞—Ä, –∫”Ø—á. –°–∞–¥—Ä–∏–¥–¥–∏–Ω –ê–π–Ω”£ 90", "phoneNumber": "+992 44 600 0009", "email": "bokhtar@arvand.tj", "email_index": "735140", "openDate": "2019-10-30", "status_id": 1},
			{"id": 10, "name": "–§–∏–ª–∏–∞–ª–∏ –•—É“∑–∞–Ω–¥", "shortName": "–•—É“∑–∞–Ω–¥", "address": "—à. –•—É“∑–∞–Ω–¥, –∫”Ø—á. –ì–∞–≥–∞—Ä–∏–Ω 21", "phoneNumber": "+992 44 600 0010", "email": "khujand@arvand.tj", "email_index": "735700", "openDate": "2020-12-12", "status_id": 1},
			{"id": 11, "name": "–§–∏–ª–∏–∞–ª–∏ –ö”Ø–ª–æ–±", "shortName": "–ö”Ø–ª–æ–±", "address": "—à. –ö”Ø–ª–æ–±, –∫”Ø—á. –ë–æ—Ä–±–∞–¥ 11", "phoneNumber": "+992 44 600 0011", "email": "kulob@arvand.tj", "email_index": "736100", "openDate": "2021-08-08", "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/office", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "–ö–ë–û –ú–∞—Ä–∫–∞–∑”£", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "openDate": "2010-01-15", "branch_id": 1, "status_id": 1},
			{"id": 2, "name": "–ö–ë–û –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "openDate": "2012-03-10", "branch_id": 2, "status_id": 1},
			{"id": 3, "name": "–ö–ë–û –§–∏—Ä–¥–∞–≤—Å”£", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "openDate": "2013-06-25", "branch_id": 3, "status_id": 1},
			{"id": 4, "name": "–ö–ë–û –°–∏–Ω–æ", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "openDate": "2014-09-05", "branch_id": 4, "status_id": 1},
			{"id": 5, "name": "–ö–ë–û –®–æ“≥–º–∞–Ω—Å—É—Ä", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –®–æ“≥–º–∞–Ω—Å—É—Ä 12", "openDate": "2015-11-20", "branch_id": 5, "status_id": 1},
			{"id": 6, "name": "–ö–ë–û –í–∞—Ö–¥–∞—Ç", "address": "—à. –í–∞—Ö–¥–∞—Ç, –∫”Ø—á. –ò—Å—Ç–∏“õ–ª–æ–ª 34", "openDate": "2016-02-14", "branch_id": 6, "status_id": 1},
			{"id": 7, "name": "–ö–ë–û “≤–∏—Å–æ—Ä", "address": "—à. “≤–∏—Å–æ—Ä, –∫”Ø—á. –ù–∞–≤—Ä”Ø–∑ 56", "openDate": "2017-04-18", "branch_id": 7, "status_id": 1},
			{"id": 8, "name": "–ö–ë–û –¢—É—Ä—Å—É–Ω–∑–æ–¥–∞", "address": "—à. –¢—É—Ä—Å—É–Ω–∑–æ–¥–∞, –∫”Ø—á. –î”Ø—Å—Ç”£ 78", "openDate": "2018-07-22", "branch_id": 8, "status_id": 1},
			{"id": 9, "name": "–ö–ë–û –ë–æ—Ö—Ç–∞—Ä", "address": "—à. –ë–æ—Ö—Ç–∞—Ä, –∫”Ø—á. –°–∞–¥—Ä–∏–¥–¥–∏–Ω –ê–π–Ω”£ 90", "openDate": "2019-10-30", "branch_id": 9, "status_id": 1},
			{"id": 10, "name": "–ö–ë–û –•—É“∑–∞–Ω–¥", "address": "—à. –•—É“∑–∞–Ω–¥, –∫”Ø—á. –ì–∞–≥–∞—Ä–∏–Ω 21", "openDate": "2020-12-12", "branch_id": 10, "status_id": 1},
			{"id": 11, "name": "–ö–ë–û –ö”Ø–ª–æ–±", "address": "—à. –ö”Ø–ª–æ–±, –∫”Ø—á. –ë–æ—Ä–±–∞–¥ 11", "openDate": "2021-08-08", "branch_id": 11, "status_id": 1},
			{"id": 12, "name": "–ö–ë–û –†”Ø–¥–∞–∫”£", "address": "—à. –†”Ø–¥–∞–∫”£, –∫”Ø—á. –°–æ–º–æ–Ω 15", "openDate": "2011-04-19", "branch_id": 5, "status_id": 1},
			{"id": 13, "name": "–ö–ë–û –°–ø–∏—Ç–∞–º–µ–Ω", "address": "—à. –°–ø–∏—Ç–∞–º–µ–Ω, –∫”Ø—á. –ò—Å—Ç–∏“õ–ª–æ–ª 22", "openDate": "2013-07-23", "branch_id": 1, "status_id": 1},
			{"id": 14, "name": "–ö–ë–û –ü–∞–Ω“∑–∞–∫–µ–Ω—Ç", "address": "—à. –ü–∞–Ω“∑–∞–∫–µ–Ω—Ç, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 33", "openDate": "2015-10-11", "branch_id": 7, "status_id": 1},
			{"id": 15, "name": "–ö–ë–û –ò—Å—Ç–∞—Ä–∞–≤—à–∞–Ω", "address": "—à. –ò—Å—Ç–∞—Ä–∞–≤—à–∞–Ω, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 44", "openDate": "2017-03-17", "branch_id": 2, "status_id": 1},
			{"id": 16, "name": "–ö–ë–û –§–∞–π–∑–æ–±–æ–¥", "address": "—à. –§–∞–π–∑–æ–±–æ–¥, –∫”Ø—á. –ù–∞–≤—Ä”Ø–∑ 55", "openDate": "2018-06-29", "branch_id": 6, "status_id": 1},
			{"id": 17, "name": "–ö–ë–û –Å–≤–æ–Ω", "address": "—à. –Å–≤–æ–Ω, –∫”Ø—á. –î”Ø—Å—Ç”£ 66", "openDate": "2019-09-14", "branch_id": 9, "status_id": 1},
			{"id": 18, "name": "–ö–ë–û –î–∞–Ω“ì–∞—Ä–∞", "address": "—à. –î–∞–Ω“ì–∞—Ä–∞, –∫”Ø—á. –ò—Å—Ç–∏“õ–ª–æ–ª 77", "openDate": "2022-02-28", "branch_id": 3, "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/role", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "super admin", "description": "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —Å–∏—Å—Ç–µ–º—ã", "permission": []int{1, 2, 3, 4, 5, 6, 7, 8, 9}},
			{"id": 2, "name": "admin", "description": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫", "permission": []int{1, 2, 3, 4, 5, 6, 7, 8}},
			{"id": 3, "name": "user", "description": "–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º—ã", "permission": []int{1, 2}},
			{"id": 4, "name": "view_auditor", "description": "–ê—É–¥–∏—Ç–æ—Ä —Å –ø—Ä–∞–≤–æ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞", "permission": []int{1, 6}},
			{"id": 5, "name": "executor", "description": "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∑–∞—è–≤–æ–∫", "permission": []int{1, 3}},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/permission", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫", "description": "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ"},
			{"id": 2, "name": "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫", "description": "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞—è–≤–∫–∏"},
			{"id": 3, "name": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫", "description": "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞—è–≤–∫–∏"},
			{"id": 4, "name": "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫", "description": "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª—è—Ç—å –∑–∞—è–≤–∫–∏"},
			{"id": 5, "name": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã–º–∏ –∑–∞–ø–∏—Å—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Ä–æ–ª—è–º–∏"},
			{"id": 6, "name": "–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤", "description": "–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤"},
			{"id": 7, "name": "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", "description": "–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã"},
			{"id": 8, "name": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤", "description": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"},
			{"id": 9, "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã", "description": "–î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º —Å–∏—Å—Ç–µ–º—ã"},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/equipment_type", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "–ë–∞–Ω–∫–æ–º–∞—Ç"},
			{"id": 2, "name": "–¢–µ—Ä–º–∏–Ω–∞–ª"},
			{"id": 3, "name": "POS-–¢–µ—Ä–º–∏–Ω–∞–ª"},
			{"id": 4, "name": "–¶–∏—Ñ—Ä–æ–≤–æ–π –æ—Ñ–∏—Å"},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/equipment", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "ATM-123456", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 1, "status_id": 1},
			{"id": 2, "name": "ATM-234567", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 1, "status_id": 1},
			{"id": 3, "name": "ATM-345678", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "branch_id": 3, "office_id": 3, "type_id": 1, "status_id": 1},
			{"id": 4, "name": "ATM-456789", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "branch_id": 4, "office_id": 4, "type_id": 1, "status_id": 1},
			{"id": 5, "name": "Terminal-1001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 2, "status_id": 1},
			{"id": 6, "name": "Terminal-1002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 2, "status_id": 1},
			{"id": 7, "name": "POS-2001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 3, "status_id": 1},
			{"id": 8, "name": "POS-2002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 3, "status_id": 1},
			{"id": 9, "name": "DigitalOffice-3001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 4, "status_id": 1},
			{"id": 10, "name": "DigitalOffice-3002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 4, "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/atm", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "ATM-123456", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 1, "status_id": 1},
			{"id": 2, "name": "ATM-234567", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 1, "status_id": 1},
			{"id": 3, "name": "ATM-345678", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "branch_id": 3, "office_id": 3, "type_id": 1, "status_id": 1},
			{"id": 4, "name": "ATM-456789", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "branch_id": 4, "office_id": 4, "type_id": 1, "status_id": 1},
			{"id": 5, "name": "Terminal-1001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 2, "status_id": 1},
			{"id": 6, "name": "Terminal-1002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 2, "status_id": 1},
			{"id": 7, "name": "POS-2001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 3, "status_id": 1},
			{"id": 8, "name": "POS-2002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 3, "status_id": 1},
			{"id": 9, "name": "DigitalOffice-3001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 4, "status_id": 1},
			{"id": 10, "name": "DigitalOffice-3002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 4, "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/terminal", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "ATM-123456", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 1, "status_id": 1},
			{"id": 2, "name": "ATM-234567", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 1, "status_id": 1},
			{"id": 3, "name": "ATM-345678", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "branch_id": 3, "office_id": 3, "type_id": 1, "status_id": 1},
			{"id": 4, "name": "ATM-456789", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "branch_id": 4, "office_id": 4, "type_id": 1, "status_id": 1},
			{"id": 5, "name": "Terminal-1001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 2, "status_id": 1},
			{"id": 6, "name": "Terminal-1002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 2, "status_id": 1},
			{"id": 7, "name": "POS-2001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 3, "status_id": 1},
			{"id": 8, "name": "POS-2002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 3, "status_id": 1},
			{"id": 9, "name": "DigitalOffice-3001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 4, "status_id": 1},
			{"id": 10, "name": "DigitalOffice-3002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 4, "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/pos", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "ATM-123456", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 1, "status_id": 1},
			{"id": 2, "name": "ATM-234567", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 1, "status_id": 1},
			{"id": 3, "name": "ATM-345678", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "branch_id": 3, "office_id": 3, "type_id": 1, "status_id": 1},
			{"id": 4, "name": "ATM-456789", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "branch_id": 4, "office_id": 4, "type_id": 1, "status_id": 1},
			{"id": 5, "name": "Terminal-1001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 2, "status_id": 1},
			{"id": 6, "name": "Terminal-1002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 2, "status_id": 1},
			{"id": 7, "name": "POS-2001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 3, "status_id": 1},
			{"id": 8, "name": "POS-2002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 3, "status_id": 1},
			{"id": 9, "name": "DigitalOffice-3001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 4, "status_id": 1},
			{"id": 10, "name": "DigitalOffice-3002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 4, "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/coeo", func(c *gin.Context) {
		data := []gin.H{
			{"id": 1, "name": "ATM-123456", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 1, "status_id": 1},
			{"id": 2, "name": "ATM-234567", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 1, "status_id": 1},
			{"id": 3, "name": "ATM-345678", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –§–∏—Ä–¥–∞–≤—Å”£ 67", "branch_id": 3, "office_id": 3, "type_id": 1, "status_id": 1},
			{"id": 4, "name": "ATM-456789", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –°–∏–Ω–æ 89", "branch_id": 4, "office_id": 4, "type_id": 1, "status_id": 1},
			{"id": 5, "name": "Terminal-1001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 2, "status_id": 1},
			{"id": 6, "name": "Terminal-1002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 2, "status_id": 1},
			{"id": 7, "name": "POS-2001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 3, "status_id": 1},
			{"id": 8, "name": "POS-2002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 3, "status_id": 1},
			{"id": 9, "name": "DigitalOffice-3001", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –†”Ø–¥–∞–∫”£ 123", "branch_id": 1, "office_id": 1, "type_id": 4, "status_id": 1},
			{"id": 10, "name": "DigitalOffice-3002", "address": "—à. –î—É—à–∞–Ω–±–µ, –∫”Ø—á. –ò—Å–º–æ–∏–ª–∏ –°–æ–º–æ–Ω”£ 45", "branch_id": 2, "office_id": 2, "type_id": 4, "status_id": 1},
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	api.GET("/user/1", func(c *gin.Context) {
		data := gin.H{
			"id":          1,
			"fio":         "–®–∞–º–æ–ª–æ–≤ –¢—É–ø–∞–ª–∞–Ω–≥ –£—Ä–æ–≥–∞–Ω–æ–≤–∏—á",
			"email":       "user1@arvand.tj",
			"phoneNumber": "+992 92 777 0000",

			"role_id":       1,
			"branch_id":     1,
			"department_id": 1,

			"office_id": 1,
			"otdel_id":  1,
			"position":  "–°—É–ø–µ—Ä –∞–¥–º–∏–Ω",
		}
		c.JSON(http.StatusOK, gin.H{
			"result":      data,
			"status_code": 200,
		})
	})

	r.Run(":8080")
}
